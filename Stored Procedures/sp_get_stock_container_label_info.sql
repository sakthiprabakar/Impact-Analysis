
create procedure sp_get_stock_container_label_info
	@company_id int,
	@profit_ctr_id int,
	@stock_container_id int
as
/************************************************************************************************* 
Loads to :    PLT_AI

10/29/2013 RB	Retrieve label information for stock containers automatically generated by Trip Complete
01/07/2014 RB	Needed to join in Receipt Container record, because it was possible that multiple
			workorder records could match on the passed criteria (co/pc/container_id)
05/04/2015 RB	Was not retrieving for Kroger customers due to join on BillingLinkLookup...added alternative
07/22/2015 RB	List of outbound tsdfs had bad join...changed to simply take location from ContainerDestination
03/23/2017 MPM	Added treatment description and treatment detail facility description to result set; 
				modified destinations to include OB approval.
01/11/2018	AM  Added consolidation_group to result.
01/17/2018  AM  Added consolidation_group for split containers.
05/03/2018	MPM	Added air permit status to result set.

sp_get_stock_container_label_info 21, 0, 302778
sp_get_stock_container_label_info 45, 0, 000043
sp_get_stock_container_label_info 21, 0, 324302

*************************************************************************************************/

declare	@trip_id int,
		@trip_co int,
		@trip_pc int,
		@is_haz int,
		@cc_id int,
		@waste_types varchar(1024),
		@treatment_processes varchar(1024),
		@outbound_tsdfs varchar(1024),
		@waste_codes varchar(1024),
		@s varchar(255),
		@haz_flag char(1),
		@treatment_desc varchar(40),
		@facility_desc varchar(20),
		@ob_approval varchar(40),
		@print_facility_treatment_desc_on_container_labels_flag char(1),
		@location_type char(1),
		@OB_profile_id int,
		@OB_profile_company_id int,
		@OB_profile_profit_ctr_id int,
		@TSDF_approval_id int,
		@profile_consolidation_group  varchar(2),
		@cons_grp  varchar(2),
		@air_permit_flag char(1),
		@air_permit_status_code varchar(10),
		@air_permit_status	varchar(10)
				
set transaction isolation level read uncommitted

-- Trip ID and CCID
select	@trip_id = wh.trip_id,
		@trip_co = wh.company_id,
		@trip_pc = wh.profit_ctr_id,
		@cc_id = wdc.consolidated_container_id
from ContainerDestination cd (nolock)
join BillingLinkLookup bll (nolock)
	on bll.company_id = cd.company_id
	and bll.profit_ctr_id = cd.profit_ctr_id
	and bll.source_type = 'W'
join WorkorderHeader wh (nolock)
	on wh.workorder_ID = bll.source_id
	and wh.company_id = bll.source_company_id
	and wh.profit_ctr_ID = bll.source_profit_ctr_id
join WorkOrderDetailCC wdc (nolock)
	on wdc.company_id = wh.company_id
	and wdc.profit_ctr_id = wh.profit_ctr_id
	and wdc.workorder_id = wh.workorder_id
	and wdc.destination_container_id = cd.container_id
join ContainerDestination cd2 (nolock)
	on cd2.company_id = cd.company_id
	and cd2.profit_ctr_id = cd.profit_ctr_id
	and cd2.container_type = 'R'
	and cd2.receipt_id > 0
	and cd2.receipt_id = bll.receipt_id
	and cd2.base_tracking_num = 'DL-' + right('0' + convert(varchar(10),cd.company_id),2) + right('0' + convert(varchar(10),cd.profit_ctr_id),2) + '-' + right('00000' + convert(varchar(10),cd.container_id),6)
where cd.line_id = @stock_container_id
and cd.container_id = @stock_container_id
and cd.receipt_id = 0
and cd.company_id = @company_id
and cd.profit_ctr_id = @profit_ctr_id
and cd.container_type = 'S'

--rb 05/04/2015 Kroger trips don't have BillingLinkLookup records
if @trip_id is null

	select	@trip_id = wh.trip_id,
			@trip_co = wh.company_id,
			@trip_pc = wh.profit_ctr_id,
			@cc_id = wdc.consolidated_container_id
	from ContainerDestination cd (nolock)
	join ReceiptHeader rh
		on rh.company_id = cd.company_id
		and rh.profit_ctr_id = cd.profit_ctr_id
		and exists (select 1 from Receipt
					where company_id = rh.company_id
					and profit_ctr_id = rh.profit_ctr_id
					and receipt_id = rh.receipt_id
					and receipt_status <> 'V')
	join WorkorderHeader wh (nolock)
		on wh.trip_id = rh.trip_id
		and wh.trip_sequence_id = rh.trip_sequence_id
	join WorkOrderDetailCC wdc (nolock)
		on wdc.company_id = wh.company_id
		and wdc.profit_ctr_id = wh.profit_ctr_id
		and wdc.workorder_id = wh.workorder_id
		and wdc.destination_container_id = cd.container_id
	join ContainerDestination cd2 (nolock)
		on cd2.company_id = cd.company_id
		and cd2.profit_ctr_id = cd.profit_ctr_id
		and cd2.container_type = 'R'
		and cd2.receipt_id > 0
		and cd2.receipt_id = rh.receipt_id
		and cd2.base_tracking_num = 'DL-' + right('0' + convert(varchar(10),cd.company_id),2) + right('0' + convert(varchar(10),cd.profit_ctr_id),2) + '-' + right('00000' + convert(varchar(10),cd.container_id),6)
	where cd.line_id = @stock_container_id
	and cd.container_id = @stock_container_id
	and cd.receipt_id = 0
	and cd.company_id = @company_id
	and cd.profit_ctr_id = @profit_ctr_id
	and cd.container_type = 'S'

select 	@treatment_desc = convert(varchar(6), t.treatment_id) + ' ' + t.treatment_desc,
		@facility_desc = td.facility_description,
		@location_type = cd.location_type,
		@OB_profile_id  = cd.OB_profile_id,
		@OB_profile_company_id = cd.OB_profile_company_id,
		@OB_profile_profit_ctr_id = cd.OB_profile_profit_ctr_id,
		@TSDF_approval_id = cd.TSDF_approval_id,
		@profile_consolidation_group = pcg.consolidation_group,
		@air_permit_status_code = aps.air_permit_status_code
from ContainerDestination cd (nolock)
	left join Treatment t (nolock)
		on t.treatment_id = cd.treatment_id
	left join TreatmentDetail td (nolock)
		on td.treatment_id = t.treatment_id
		and td.company_id = cd.company_id
		and td.profit_ctr_id = cd.profit_ctr_id
	left join ProfileConsolidationGroup pcg (nolock) 
		ON cd.consolidation_group_uid = pcg.consolidation_group_uid
			and pcg.company_id = cd.company_id
		    and pcg.profit_ctr_id = cd.profit_ctr_id
	left join AirPermitStatus aps (nolock)
		ON aps.air_permit_status_uid = cd.air_permit_status_uid
	where cd.line_id = @stock_container_id
	and cd.container_id = @stock_container_id
	and cd.receipt_id = 0
	and cd.company_id = @company_id
	and cd.profit_ctr_id = @profit_ctr_id
	and cd.container_type = 'S'
		
select @print_facility_treatment_desc_on_container_labels_flag = isnull(print_facility_treatment_desc_on_container_labels_flag, 'F'),
		@air_permit_flag = ISNULL(air_permit_flag, 'F')
from ProfitCenter
where company_ID = @company_id
and profit_ctr_ID = @profit_ctr_id 

if @print_facility_treatment_desc_on_container_labels_flag = 'F'
	select @facility_desc = ''
	
if @air_permit_flag = 'F'
	select @air_permit_status_code = ''
	
-- Get outbound approval 
if @location_type = 'O'
	if @OB_profile_id is not null
		select @ob_approval = approval_code
		from ProfileQuoteApproval
		where profile_id = @OB_profile_id
		and company_id = @OB_profile_company_id
		and profit_ctr_id = @OB_profile_profit_ctr_id
	else
		if @tsdf_approval_id is not null
			select @ob_approval = TSDF_approval_code
			from TSDFApproval
			where TSDF_approval_id = @TSDF_approval_id
		
-- Distinct Waste Types
declare c_wt cursor forward_only read_only for
select distinct t.wastetype_category + ' - ' + t.wastetype_description
from Treatment t
join ContainerDestination cd
	on cd.company_id = @company_id
	and cd.profit_ctr_id = @profit_ctr_id
	and cd.receipt_id = 0
	and cd.line_id = @stock_container_id
	and cd.container_id = @stock_container_id
	and cd.container_type = 'S'
where t.treatment_id = cd.treatment_id
and t.company_id = @company_id
and t.profit_ctr_id = @profit_ctr_id
and isnull(t.wastetype_description,'') <> ''

open c_wt
fetch c_wt into @s

while @@FETCH_STATUS = 0
begin
	if DATALENGTH(isnull(@waste_types,'')) > 0
		set @waste_types = @waste_types + ', '

	set @waste_types = ISNULL(@waste_types,'') + @s

	fetch c_wt into @s
end

close c_wt
deallocate c_wt

-- Distinct Treatment Processes
declare c_tp cursor forward_only read_only for
select distinct t.treatment_process_process
from Treatment t
join ContainerDestination cd
	on t.treatment_id = cd.treatment_id
	and cd.company_id = @company_id
	and cd.profit_ctr_id = @profit_ctr_id
	and cd.receipt_id = 0
	and cd.line_id = @stock_container_id
	and cd.container_id = @stock_container_id
	and cd.container_type = 'S'
where isnull(t.treatment_process_process,'') <> ''

open c_tp
fetch c_tp into @s

while @@FETCH_STATUS = 0
begin
	if DATALENGTH(isnull(@treatment_processes,'')) > 0
		set @treatment_processes = @treatment_processes + ', '

	set @treatment_processes = ISNULL(@treatment_processes,'') + @s

	fetch c_tp into @s
end

close c_tp
deallocate c_tp

-- Distinct Outbound TSDFs
declare c_tsdf cursor forward_only read_only for
select distinct cd.location
from ContainerDestination cd
where cd.company_id = @company_id
and cd.profit_ctr_id = @profit_ctr_id
and cd.receipt_id = 0
and cd.line_id = @stock_container_id
and cd.container_id = @stock_container_id
and cd.container_type = 'S'
and isnull(cd.location,'') <> ''

open c_tsdf
fetch c_tsdf into @s

while @@FETCH_STATUS = 0
begin
	if DATALENGTH(isnull(@outbound_tsdfs,'')) > 0
		set @outbound_tsdfs = @outbound_tsdfs + ', '

	set @outbound_tsdfs = ISNULL(@outbound_tsdfs,'') + @s

	fetch c_tsdf into @s
end

close c_tsdf
deallocate c_tsdf

-- Append ob approval to @outbound_tsdf's
if @ob_approval is not null
	select @outbound_tsdfs = @outbound_tsdfs + '-' + @ob_approval

-- Distinct Waste Codes
declare c_wc cursor forward_only read_only for
select distinct wc.display_name, isnull(wc.haz_flag,'F')
from ContainerDestination cd
join ContainerWasteCode cwc
	on cd.company_id = cwc.company_id
	and cd.profit_ctr_id = cwc.profit_ctr_id
	and cd.receipt_id = cwc.receipt_id
	and cd.line_id = cwc.line_id
join WasteCode wc
	on cwc.waste_code_uid = wc.waste_code_uid
where cd.company_id = @company_id
and cd.profit_ctr_id = @profit_ctr_id
and cd.receipt_id = 0
and cd.line_id = @stock_container_id
and cd.container_id = @stock_container_id
and cd.container_type = 'S'
and isnull(wc.display_name,'') <> ''

open c_wc
fetch c_wc into @s, @haz_flag

while @@FETCH_STATUS = 0
begin
	if DATALENGTH(isnull(@waste_codes,'')) > 0
		set @waste_codes = @waste_codes + ', '

	set @waste_codes = ISNULL(@waste_codes,'') + @s

	if @haz_flag = 'T'
		set @is_haz = 1

	fetch c_wc into @s, @haz_flag
end

close c_wc
deallocate c_wc

-- this code is for split containers (consolidation group)
declare c_cp cursor forward_only read_only for
select distinct pcg.consolidation_group
from ContainerDestination cd
  left join ProfileConsolidationGroup pcg (nolock) 
		ON cd.consolidation_group_uid = pcg.consolidation_group_uid
			and pcg.company_id = cd.company_id
		    and pcg.profit_ctr_id = cd.profit_ctr_id		    
where cd.company_id = @company_id
	and cd.profit_ctr_id = @profit_ctr_id
	and cd.receipt_id = 0
	and cd.line_id = @stock_container_id
	and cd.container_id = @stock_container_id
	and cd.container_type = 'S'
	and isnull(pcg.consolidation_group,'') <> ''
	
open c_cp
fetch c_cp into @cons_grp

while @@FETCH_STATUS = 0
begin
	if DATALENGTH(isnull(@cons_grp,'')) > 0
		set @profile_consolidation_group = @profile_consolidation_group + ', '

	set @profile_consolidation_group = ISNULL(@profile_consolidation_group,'') + @cons_grp

	fetch c_cp into @cons_grp
end

close c_cp
deallocate c_cp

-- Code for split containers (air permit status)
declare c_aps cursor forward_only read_only for
select distinct aps.air_permit_status_code
from ContainerDestination cd
  left join AirPermitStatus aps (nolock) 
		ON cd.air_permit_status_uid = aps.air_permit_status_uid
where cd.company_id = @company_id
	and cd.profit_ctr_id = @profit_ctr_id
	and cd.receipt_id = 0
	and cd.line_id = @stock_container_id
	and cd.container_id = @stock_container_id
	and cd.container_type = 'S'
	and isnull(aps.air_permit_status_code,'') <> ''
	
open c_aps
fetch c_aps into @air_permit_status

while @@FETCH_STATUS = 0
begin
	if DATALENGTH(isnull(@air_permit_status,'')) > 0
		set @air_permit_status_code = @air_permit_status_code + ', '

	set @air_permit_status_code = ISNULL(@air_permit_status_code,'') + @air_permit_status

	fetch c_aps into @air_permit_status
end

close c_aps
deallocate c_aps

select	@trip_id as trip_id,
	@trip_co as trip_co,
	@trip_pc as trip_pc,
		isnull(@is_haz,0) as is_haz,
		@cc_id as cc_id,
		isnull(@waste_types,'') as waste_types,
		isnull(@treatment_processes,'') as treatment_processes,
		isnull(@outbound_tsdfs,'') as outbound_tsdfs,
		isnull(@waste_codes,'') as waste_codes,
		isnull(@treatment_desc,'') as treatment_desc,
		isnull(@facility_desc,'') as facility_desc,
		isnull(@profile_consolidation_group,'') as consolidation_group,
		ISNULL(@air_permit_status_code, '') as air_permit_status_code
		

GO
GRANT EXECUTE
    ON OBJECT::[dbo].[sp_get_stock_container_label_info] TO [EQAI]
    AS [dbo];

